/**
 * This file is autogenerated by Scaffold-ETH.
 * You should not edit it manually or your changes might be overwritten.
 */
import { GenericContractsDeclaration } from "~~/utils/scaffold-eth/contract";

const deployedContracts = {
  31337: {
    MockStarknetMessaging: {
      address: "0x5fbdb2315678afecb367f032d93f642f64180aa3",
      abi: [
        {
          type: "function",
          name: "addMessageHashesFromL2",
          inputs: [
            {
              name: "msgHashes",
              type: "uint256[]",
              internalType: "uint256[]",
            },
          ],
          outputs: [],
          stateMutability: "payable",
        },
        {
          type: "function",
          name: "cancelL1ToL2Message",
          inputs: [
            {
              name: "toAddress",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "selector",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "payload",
              type: "uint256[]",
              internalType: "uint256[]",
            },
            {
              name: "nonce",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bytes32",
              internalType: "bytes32",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "consumeMessageFromL2",
          inputs: [
            {
              name: "fromAddress",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "payload",
              type: "uint256[]",
              internalType: "uint256[]",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bytes32",
              internalType: "bytes32",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "getMaxL1MsgFee",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "pure",
        },
        {
          type: "function",
          name: "l1ToL2MessageCancellations",
          inputs: [
            {
              name: "msgHash",
              type: "bytes32",
              internalType: "bytes32",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "l1ToL2MessageNonce",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "l1ToL2Messages",
          inputs: [
            {
              name: "msgHash",
              type: "bytes32",
              internalType: "bytes32",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "l2ToL1Messages",
          inputs: [
            {
              name: "msgHash",
              type: "bytes32",
              internalType: "bytes32",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "messageCancellationDelay",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "sendMessageToL2",
          inputs: [
            {
              name: "toAddress",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "selector",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "payload",
              type: "uint256[]",
              internalType: "uint256[]",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bytes32",
              internalType: "bytes32",
            },
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "payable",
        },
        {
          type: "function",
          name: "startL1ToL2MessageCancellation",
          inputs: [
            {
              name: "toAddress",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "selector",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "payload",
              type: "uint256[]",
              internalType: "uint256[]",
            },
            {
              name: "nonce",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bytes32",
              internalType: "bytes32",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "event",
          name: "ConsumedMessageToL1",
          inputs: [
            {
              name: "fromAddress",
              type: "uint256",
              indexed: true,
              internalType: "uint256",
            },
            {
              name: "toAddress",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "payload",
              type: "uint256[]",
              indexed: false,
              internalType: "uint256[]",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "ConsumedMessageToL2",
          inputs: [
            {
              name: "fromAddress",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "toAddress",
              type: "uint256",
              indexed: true,
              internalType: "uint256",
            },
            {
              name: "selector",
              type: "uint256",
              indexed: true,
              internalType: "uint256",
            },
            {
              name: "payload",
              type: "uint256[]",
              indexed: false,
              internalType: "uint256[]",
            },
            {
              name: "nonce",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "LogMessageToL1",
          inputs: [
            {
              name: "fromAddress",
              type: "uint256",
              indexed: true,
              internalType: "uint256",
            },
            {
              name: "toAddress",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "payload",
              type: "uint256[]",
              indexed: false,
              internalType: "uint256[]",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "LogMessageToL2",
          inputs: [
            {
              name: "fromAddress",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "toAddress",
              type: "uint256",
              indexed: true,
              internalType: "uint256",
            },
            {
              name: "selector",
              type: "uint256",
              indexed: true,
              internalType: "uint256",
            },
            {
              name: "payload",
              type: "uint256[]",
              indexed: false,
              internalType: "uint256[]",
            },
            {
              name: "nonce",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "fee",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "MessageHashesAddedFromL2",
          inputs: [
            {
              name: "hashes",
              type: "uint256[]",
              indexed: false,
              internalType: "uint256[]",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "MessageToL2Canceled",
          inputs: [
            {
              name: "fromAddress",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "toAddress",
              type: "uint256",
              indexed: true,
              internalType: "uint256",
            },
            {
              name: "selector",
              type: "uint256",
              indexed: true,
              internalType: "uint256",
            },
            {
              name: "payload",
              type: "uint256[]",
              indexed: false,
              internalType: "uint256[]",
            },
            {
              name: "nonce",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "MessageToL2CancellationStarted",
          inputs: [
            {
              name: "fromAddress",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "toAddress",
              type: "uint256",
              indexed: true,
              internalType: "uint256",
            },
            {
              name: "selector",
              type: "uint256",
              indexed: true,
              internalType: "uint256",
            },
            {
              name: "payload",
              type: "uint256[]",
              indexed: false,
              internalType: "uint256[]",
            },
            {
              name: "nonce",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
      ],
      inheritedFunctions: {
        cancelL1ToL2Message: "lib/starknet/StarknetMessaging.sol",
        consumeMessageFromL2: "lib/starknet/StarknetMessaging.sol",
        getMaxL1MsgFee: "lib/starknet/StarknetMessaging.sol",
        l1ToL2MessageCancellations: "lib/starknet/StarknetMessaging.sol",
        l1ToL2MessageNonce: "lib/starknet/StarknetMessaging.sol",
        l1ToL2Messages: "lib/starknet/StarknetMessaging.sol",
        l2ToL1Messages: "lib/starknet/StarknetMessaging.sol",
        messageCancellationDelay: "lib/starknet/StarknetMessaging.sol",
        sendMessageToL2: "lib/starknet/StarknetMessaging.sol",
        startL1ToL2MessageCancellation: "lib/starknet/StarknetMessaging.sol",
        addMessageHashesFromL2:
          "contracts/messaging/IMockStarknetMessaging.sol",
      },
    },
    CrossChainCrowdfundL1: {
      address: "0xe7f1725e7734ce288f8367e1bb143e90bb3f0512",
      abi: [
        {
          type: "constructor",
          inputs: [
            {
              name: "starknetMessaging",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "CREATE_CAMPAIGN_FROM_L1_SELECTOR",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "createCampaign",
          inputs: [
            {
              name: "campaignType",
              type: "uint8",
              internalType: "uint8",
            },
            {
              name: "targetAmount",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "token",
              type: "address",
              internalType: "address",
            },
            {
              name: "timeLeft",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "dataCid",
              type: "string",
              internalType: "string",
            },
          ],
          outputs: [],
          stateMutability: "payable",
        },
        {
          type: "function",
          name: "owner",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "renounceOwnership",
          inputs: [],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "sendMessage",
          inputs: [
            {
              name: "l2ContractAddress",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "randomNumber",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "payable",
        },
        {
          type: "function",
          name: "setL2Token",
          inputs: [
            {
              name: "l1Token",
              type: "address",
              internalType: "address",
            },
            {
              name: "l2Token",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "setUpTargetContract",
          inputs: [
            {
              name: "l2ContractAddress",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "transferOwnership",
          inputs: [
            {
              name: "newOwner",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "withdraw",
          inputs: [
            {
              name: "campaignId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "event",
          name: "OwnershipTransferred",
          inputs: [
            {
              name: "previousOwner",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "newOwner",
              type: "address",
              indexed: true,
              internalType: "address",
            },
          ],
          anonymous: false,
        },
        {
          type: "error",
          name: "OwnableInvalidOwner",
          inputs: [
            {
              name: "owner",
              type: "address",
              internalType: "address",
            },
          ],
        },
        {
          type: "error",
          name: "OwnableUnauthorizedAccount",
          inputs: [
            {
              name: "account",
              type: "address",
              internalType: "address",
            },
          ],
        },
      ],
      inheritedFunctions: {},
    },
  },
} as const;

export default deployedContracts satisfies GenericContractsDeclaration;
